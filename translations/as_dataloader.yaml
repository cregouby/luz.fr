title:
  original: Creates a dataloader from its input
  translation: Crée un dataloader à partir de son entrée
arguments:
  x:
    original: the input object.
    translation: l'objet d'entrée.
  '...':
    original: Passed to \code{\link[torch:dataloader]{torch::dataloader()}}.
    translation: Passé à `\code{\link[torch:dataloader]{torch::dataloader()}}`.
  batch_size:
    original: |-
      (int, optional): how many samples per batch to load
      (default: \code{1}).
    translation: |-
      (entier, facultatif) : nombre de séquences par lot à charger
      (par défaut : `\code{1}`).
description:
  original: |
    \code{as_dataloader} is used internally by luz to convert input
    \code{data} and \code{valid_data} as passed to \code{\link[=fit.luz_module_generator]{fit.luz_module_generator()}} to a
    \link[torch:dataloader]{torch::dataloader}
  translation: |-
    `\code{as_dataloader}` est utilisé en interne par luz pour convertir les entrées
    `\code{data}` et `\code{valid_data}` passés à `\code{\link[=fit.luz_module_generator]{fit.luz_module_generator()}}` vers un
    `\link[torch:dataloader]{torch::dataloader}`
details:
  original: |
    \code{as_dataloader} methods should have sensible defaults for batch_size,
    parallel workers, etc.

    It allows users to quickly experiment with \code{\link[=fit.luz_module_generator]{fit.luz_module_generator()}} by not requiring
    to create a \link[torch:dataset]{torch::dataset} and a \link[torch:dataloader]{torch::dataloader} in simple
    experiments.
  translation: |-
    Les méthodes `\code{as_dataloader}` devraient avoir des paramètres par défaut choisis
    avec attention pour la taille du lot, les workers parallèles, etc.

    Elle permet aux utilisateurs de tester rapidement `\code{\link[=fit.luz_module_generator]{fit.luz_module_generator()}}` sans avoir besoin
    de créer un `\link[torch:dataset]{torch::dataset}` et un `\link[torch:dataloader]{torch::dataloader}` pour l'expérimentation.
section{Methods (by class)}:
  original: |-
    \itemize{
    \item \code{as_dataloader(dataset)}: Converts a \code{\link[torch:dataset]{torch::dataset()}} to a \code{\link[torch:dataloader]{torch::dataloader()}}.

    \item \code{as_dataloader(iterable_dataset)}: Converts a \code{\link[torch:iterable_dataset]{torch::iterable_dataset()}} into a \code{\link[torch:dataloader]{torch::dataloader()}}

    \item \code{as_dataloader(list)}: Converts a list of tensors or arrays with the same
    size in the first dimension to a  \code{\link[torch:dataloader]{torch::dataloader()}}

    \item \code{as_dataloader(dataloader)}: Returns the same dataloader

    \item \code{as_dataloader(matrix)}: Converts the matrix to a dataloader

    \item \code{as_dataloader(numeric)}: Converts the numeric vector to a dataloader

    \item \code{as_dataloader(array)}: Converts the array to a dataloader

    \item \code{as_dataloader(torch_tensor)}: Converts the tensor to a dataloader

    }
  translation: |-
    \itemize{
    \item `\code{as_dataloader(dataset)}` : Convertit un `\code{\link[torch:dataset]{torch::dataset()}}` en 
    un `\code{\link[torch:dataloader]{torch::dataloader()}}`.

    \item `\code{as_dataloader(iterable_dataset)}` : Convertit un `\code{\link[torch:iterable_dataset]{torch::iterable_dataset()}}` en 
    un `\code{\link[torch:dataloader]{torch::dataloader()}}`

    \item `\code{as_dataloader(list)}` : Convertit une liste de tenseurs ou d'arrays avec la même
    taille dans leur première dimension en un `\code{\link[torch:dataloader]{torch::dataloader()}}`

    \item `\code{as_dataloader(dataloader)}` : Retourne le même dataloader

    \item `\code{as_dataloader(matrix)}` : Convertit la matrice en un dataloader

    \item `\code{as_dataloader(numeric)}` : Convertit le vecteur numérique en un dataloader

    \item `\code{as_dataloader(array)}` : Convertit l'array en un dataloader

    \item `\code{as_dataloader(torch_tensor)}` : Convertit le tenseur en un dataloader
    }
section{Overriding}:
  original: |
    You can implement your own \code{as_dataloader} S3 method if you want your data
    structure to be automatically supported by luz's \code{\link[=fit.luz_module_generator]{fit.luz_module_generator()}}.
    The method must satisfy the following conditions:
    \itemize{
    \item The method should return a \code{\link[torch:dataloader]{torch::dataloader()}}.
    \item The only required argument is \code{x}. You have good default for all other
    arguments.
    }

    It's better to avoid implementing \code{as_dataloader} methods for common S3 classes
    like \code{data.frames}. In this case, its better to assign a different class to
    the inputs and implement \code{as_dataloader} for it.
  translation: |-
    Vous pouvez implémenter votre propre méthode S3 de `\code{as_dataloader}` si vous voulez que votre 
    structure de données soit automatiquement prise en charge par luz's `\code{\link[=fit.luz_module_generator]{fit.luz_module_generator()}}`.
    La méthode doit satisfaire les conditions suivantes :
    \itemize{
    \item La méthode doit retourner un `\code{\link[torch:dataloader]{torch::dataloader()}}`.
    \item L'unique argument requis est `x`. Vous avez des paramètres avec de bonnes valeurs par défaut pour tous les autres arguments.
    }

    Il faut éviter l'implémentation de méthodes `\code{as_dataloader}` pour les classes S3 courantes comme 
    `\code{data.frames}`. Si nécessaire, il est préférable d'affecter une classe S3 spécifique aux inputs et d'implémenter 
    `\code{as_dataloader}` pour cette classe.
untranslatable:
- alias
- name
- keyword
- concept
- usage
